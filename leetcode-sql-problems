262-Hard. Trips and Users
Calculate cancelation rate of a taxi trips by day


        # Filter out UnbannedUser
        With UnbannedUser as (
            SELECT * 
            FROM Users
            WHERE Banned = 'No'
        ),
        # Filter out Trips with unbanned client and driver
            UnbannedTrip as ( 
            SELECT *, SUM(CASE WHEN UnbannedTrip.Status = 'completed' THEN 0 ELSE 1 END) AS 'cancelled',
            COUNT(*) AS 'totalOrder'
            FROM Trips
            WHERE Client_Id IN (SELECT Users_Id FROM UnbannedUser WHERE Role = 'client')
                  AND  Driver_Id IN (SELECT Users_Id FROM UnbannedUser WHERE Role = 'driver' )
            GROUP BY Request_at 
        )

        # Calculate Cancelation Rate by Date

        SELECT DISTINCT Request_at AS 'Day', 
               ROUND(cancelled / totalOrder, 2) AS 'Cancellation Rate'
        FROM UnbannedTrip   
        WHERE Request_at between '2013-10-01' and '2013-10-03'


569. Median Employee Salary
The Employee table holds all employees. The employee table has three columns: Employee Id, Company Name, and Salary.
        
        #Solution 1: group by + algorithm
        
        SELECT
            Employee.Id, Employee.Company, Employee.Salary
        FROM
            Employee,
            Employee alias
        WHERE
            Employee.Company = alias.Company
        GROUP BY Employee.Company , Employee.Salary
        HAVING SUM(CASE
            WHEN Employee.Salary = alias.Salary THEN 1
            ELSE 0
        END) >= ABS(SUM(SIGN(Employee.Salary - alias.Salary)))  #SIGN(a-b) a-b > 0 return 1, a-b = 0 return 0, a-b < 0 return -1.
        ORDER BY Employee.Id
        ;
        
        
         #Solution 2: temp table + partition by  
         WITH orderedSalary AS (
                SELECT Id, Company, Salary, 
                       row_number() OVER (PARTITION BY Company ORDER BY Salary) AS SalarySeq, 
                       COUNT(*) OVER (Partition by Company) AS empNum
                FROM   Employee)

        SELECT Id, Company, Salary
        FROM orderedSalary
        WHERE SalarySeq IN (ceil(empNum/2), empNum/2 + 1);
        
        
        
627. Swap sex
        UPDATE salary 
           SET sex = CASE sex 
           WHEN 'f' THEN 'm' 
           WHEN 'm' THEN 'f' 
           ELSE 'Default' END 
        WHERE sex IN ('f', 'm')

1270. All People Report to the CEO(within 3 degree of relations)
        SELF JOIN to find report relationships

        WITH relation AS (
        Select employee_id as eId, manager_id as mId
            FROM Employees)

        SELECT r1.eId as employee_id
        FROM relation r1 
             JOIN relation r2 ON r1.mId = r2.eId
             JOIN relation r3 ON r2.mId = r3.eId
             JOIN relation r4 ON r3.mId = r4.eId
        WHERE r1.eId <> 1 AND r4.eId = 1
        
        
626. Exchange Seats OF Students

        SELECT (CASE WHEN MOD(id, 2) = 0 THEN id - 1 
                     WHEN MOD(id, 2) = 1 AND id != totalSeat THEN id + 1
                     ELSE id
                     END) AS id, student
        FROM  seat, (SELECT COUNT(id) totalSeat FROM seat) AS total
        ORDER BY id ASC
        
1179. Reformat Department Table
        the original table has three columns: department Id, month, revenue. My goal is to pivot this table to id as column, month as rows, and revenue as content.
    SELECT id, 
            SUM(CASE when month = "Jan" THEN revenue ELSE null END) AS Jan_Revenue,
            SUM(CASE when month = "Feb" THEN revenue ELSE null END) AS Feb_Revenue,
            SUM(CASE when month = "Mar" THEN revenue ELSE null END) AS Mar_Revenue,
            SUM(CASE when month = "Apr" THEN revenue ELSE null END) AS Apr_Revenue,
            SUM(CASE when month = "May" THEN revenue ELSE null END) AS May_Revenue,
            SUM(CASE when month = "Jun" THEN revenue ELSE null END) AS Jun_Revenue,
            SUM(CASE when month = "Jul" THEN revenue ELSE null END) AS Jul_Revenue,
            SUM(CASE when month = "Aug" THEN revenue ELSE null END) AS Aug_Revenue,
            SUM(CASE when month = "Sep" THEN revenue ELSE null END) AS Sep_Revenue,
            SUM(CASE when month = "Oct" THEN revenue ELSE null END) AS Oct_Revenue,
            SUM(CASE when month = "Nov" THEN revenue ELSE null END) AS Nov_Revenue,
            SUM(CASE when month = "Dec" THEN revenue ELSE null END) AS Dec_Revenue
    FROM Department
    GROUP BY id
    ORDER BY id
